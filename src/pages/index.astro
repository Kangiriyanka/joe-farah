---
import BaseLayout from '../layouts/BaseLayout.astro';
import BlogPost from '../components/BlogPost.astro';
import ProjectCard from '../components/ProjectCard.astro';
import Separator from '../components/Separator.astro';

const allPosts = Object.values(import.meta.glob('./posts/*.md', { eager: true }));
const allProjects = Object.values(import.meta.glob('./projects/*.md', { eager: true }));


// Sort by date (newest first)
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = Date.parse((a as { frontmatter: { pubDate: string } }).frontmatter.pubDate);
  const dateB = Date.parse((b as { frontmatter: { pubDate: string } }).frontmatter.pubDate);
  return dateB - dateA
});

// Get the last 3 posts (most recent)
const latestPosts = sortedPosts.slice(0, 3);
const pageTitle = "Hello, I'm Joseph  ◡̈";

---
<BaseLayout pageTitle={pageTitle}  >


<p class="text-justify">
I build web and iOS   <a class=" secondary-a font-bold hover:underline" href= "/projects/"> apps</a> to help people practice and enjoy their hobbies. 
It's a great feeling to step out from the sidelines and share.
</p>
<Separator/>

<h1> Latest Posts </h1>

</div>
{latestPosts.map((post: any) => 
<BlogPost 
url={post.url} 
date= {post.frontmatter.pubDate} 
title={post.frontmatter.title} 
description = {post.frontmatter.description} 
tag= {post.frontmatter.tags[0]}/>)}

<p class="text-right" ><a class= "secondary-a  no-underline font-bold hover:underline" href="/blog/">All Posts </a>

</p>
<Separator />



  <span> <h1>Projects <p class="text-xs">  </p></h1> </span>
  



<!-- Working on  -->
 <p class="!text-2xl bold"> Working on: </p>
<div class=" grid grid-cols-1 md:grid-cols-2 gap-3 my-1 ">
{allProjects
.filter((a: any) => a.frontmatter.order > 4)
.map((project: any) =>



 (<ProjectCard 
 url = {project.url}
 stack= {project.frontmatter.stack}
 title = {project.frontmatter.title}
 description = {project.frontmatter.description}/>))}

</div>



<!-- Completed -->
 <p class="!text-2xl bold"> Built Projects: </p>

<div class=" grid grid-cols-1 md:grid-cols-2 gap-3 my-1 ">
{allProjects
.sort((a: any, b: any ) => a.frontmatter.order - b.frontmatter.order)
.filter((a: any) => a.frontmatter.order < 5)
.map((project: any) =>



 (<ProjectCard 
 url = {project.url}
 stack= {project.frontmatter.stack}
 title = {project.frontmatter.title}
 description = {project.frontmatter.description}/>))}
 
</div>


 

<p class="text-right"><a class="secondary-a text-center  no-underline font-bold hover:underline" href="/projects/"> All Projects  </a></p>
</div>



</script>

 

  
</BaseLayout>

